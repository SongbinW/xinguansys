package cn.junang.sys.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class Chec_manageExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table chec_manage
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table chec_manage
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table chec_manage
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chec_manage
     *
     * @mbg.generated
     */
    public Chec_manageExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chec_manage
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chec_manage
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chec_manage
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chec_manage
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chec_manage
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chec_manage
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chec_manage
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chec_manage
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chec_manage
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chec_manage
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table chec_manage
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProductnameIsNull() {
            addCriterion("productname is null");
            return (Criteria) this;
        }

        public Criteria andProductnameIsNotNull() {
            addCriterion("productname is not null");
            return (Criteria) this;
        }

        public Criteria andProductnameEqualTo(String value) {
            addCriterion("productname =", value, "productname");
            return (Criteria) this;
        }

        public Criteria andProductnameNotEqualTo(String value) {
            addCriterion("productname <>", value, "productname");
            return (Criteria) this;
        }

        public Criteria andProductnameGreaterThan(String value) {
            addCriterion("productname >", value, "productname");
            return (Criteria) this;
        }

        public Criteria andProductnameGreaterThanOrEqualTo(String value) {
            addCriterion("productname >=", value, "productname");
            return (Criteria) this;
        }

        public Criteria andProductnameLessThan(String value) {
            addCriterion("productname <", value, "productname");
            return (Criteria) this;
        }

        public Criteria andProductnameLessThanOrEqualTo(String value) {
            addCriterion("productname <=", value, "productname");
            return (Criteria) this;
        }

        public Criteria andProductnameLike(String value) {
            addCriterion("productname like", value, "productname");
            return (Criteria) this;
        }

        public Criteria andProductnameNotLike(String value) {
            addCriterion("productname not like", value, "productname");
            return (Criteria) this;
        }

        public Criteria andProductnameIn(List<String> values) {
            addCriterion("productname in", values, "productname");
            return (Criteria) this;
        }

        public Criteria andProductnameNotIn(List<String> values) {
            addCriterion("productname not in", values, "productname");
            return (Criteria) this;
        }

        public Criteria andProductnameBetween(String value1, String value2) {
            addCriterion("productname between", value1, value2, "productname");
            return (Criteria) this;
        }

        public Criteria andProductnameNotBetween(String value1, String value2) {
            addCriterion("productname not between", value1, value2, "productname");
            return (Criteria) this;
        }

        public Criteria andGgmodelIsNull() {
            addCriterion("ggmodel is null");
            return (Criteria) this;
        }

        public Criteria andGgmodelIsNotNull() {
            addCriterion("ggmodel is not null");
            return (Criteria) this;
        }

        public Criteria andGgmodelEqualTo(String value) {
            addCriterion("ggmodel =", value, "ggmodel");
            return (Criteria) this;
        }

        public Criteria andGgmodelNotEqualTo(String value) {
            addCriterion("ggmodel <>", value, "ggmodel");
            return (Criteria) this;
        }

        public Criteria andGgmodelGreaterThan(String value) {
            addCriterion("ggmodel >", value, "ggmodel");
            return (Criteria) this;
        }

        public Criteria andGgmodelGreaterThanOrEqualTo(String value) {
            addCriterion("ggmodel >=", value, "ggmodel");
            return (Criteria) this;
        }

        public Criteria andGgmodelLessThan(String value) {
            addCriterion("ggmodel <", value, "ggmodel");
            return (Criteria) this;
        }

        public Criteria andGgmodelLessThanOrEqualTo(String value) {
            addCriterion("ggmodel <=", value, "ggmodel");
            return (Criteria) this;
        }

        public Criteria andGgmodelLike(String value) {
            addCriterion("ggmodel like", value, "ggmodel");
            return (Criteria) this;
        }

        public Criteria andGgmodelNotLike(String value) {
            addCriterion("ggmodel not like", value, "ggmodel");
            return (Criteria) this;
        }

        public Criteria andGgmodelIn(List<String> values) {
            addCriterion("ggmodel in", values, "ggmodel");
            return (Criteria) this;
        }

        public Criteria andGgmodelNotIn(List<String> values) {
            addCriterion("ggmodel not in", values, "ggmodel");
            return (Criteria) this;
        }

        public Criteria andGgmodelBetween(String value1, String value2) {
            addCriterion("ggmodel between", value1, value2, "ggmodel");
            return (Criteria) this;
        }

        public Criteria andGgmodelNotBetween(String value1, String value2) {
            addCriterion("ggmodel not between", value1, value2, "ggmodel");
            return (Criteria) this;
        }

        public Criteria andUnitIsNull() {
            addCriterion("unit is null");
            return (Criteria) this;
        }

        public Criteria andUnitIsNotNull() {
            addCriterion("unit is not null");
            return (Criteria) this;
        }

        public Criteria andUnitEqualTo(String value) {
            addCriterion("unit =", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitNotEqualTo(String value) {
            addCriterion("unit <>", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitGreaterThan(String value) {
            addCriterion("unit >", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitGreaterThanOrEqualTo(String value) {
            addCriterion("unit >=", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitLessThan(String value) {
            addCriterion("unit <", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitLessThanOrEqualTo(String value) {
            addCriterion("unit <=", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitLike(String value) {
            addCriterion("unit like", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitNotLike(String value) {
            addCriterion("unit not like", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitIn(List<String> values) {
            addCriterion("unit in", values, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitNotIn(List<String> values) {
            addCriterion("unit not in", values, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitBetween(String value1, String value2) {
            addCriterion("unit between", value1, value2, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitNotBetween(String value1, String value2) {
            addCriterion("unit not between", value1, value2, "unit");
            return (Criteria) this;
        }

        public Criteria andMaNumberIsNull() {
            addCriterion("ma_number is null");
            return (Criteria) this;
        }

        public Criteria andMaNumberIsNotNull() {
            addCriterion("ma_number is not null");
            return (Criteria) this;
        }

        public Criteria andMaNumberEqualTo(Integer value) {
            addCriterion("ma_number =", value, "maNumber");
            return (Criteria) this;
        }

        public Criteria andMaNumberNotEqualTo(Integer value) {
            addCriterion("ma_number <>", value, "maNumber");
            return (Criteria) this;
        }

        public Criteria andMaNumberGreaterThan(Integer value) {
            addCriterion("ma_number >", value, "maNumber");
            return (Criteria) this;
        }

        public Criteria andMaNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("ma_number >=", value, "maNumber");
            return (Criteria) this;
        }

        public Criteria andMaNumberLessThan(Integer value) {
            addCriterion("ma_number <", value, "maNumber");
            return (Criteria) this;
        }

        public Criteria andMaNumberLessThanOrEqualTo(Integer value) {
            addCriterion("ma_number <=", value, "maNumber");
            return (Criteria) this;
        }

        public Criteria andMaNumberIn(List<Integer> values) {
            addCriterion("ma_number in", values, "maNumber");
            return (Criteria) this;
        }

        public Criteria andMaNumberNotIn(List<Integer> values) {
            addCriterion("ma_number not in", values, "maNumber");
            return (Criteria) this;
        }

        public Criteria andMaNumberBetween(Integer value1, Integer value2) {
            addCriterion("ma_number between", value1, value2, "maNumber");
            return (Criteria) this;
        }

        public Criteria andMaNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("ma_number not between", value1, value2, "maNumber");
            return (Criteria) this;
        }

        public Criteria andMaTimeIsNull() {
            addCriterion("ma_time is null");
            return (Criteria) this;
        }

        public Criteria andMaTimeIsNotNull() {
            addCriterion("ma_time is not null");
            return (Criteria) this;
        }

        public Criteria andMaTimeEqualTo(Date value) {
            addCriterionForJDBCDate("ma_time =", value, "maTime");
            return (Criteria) this;
        }

        public Criteria andMaTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("ma_time <>", value, "maTime");
            return (Criteria) this;
        }

        public Criteria andMaTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("ma_time >", value, "maTime");
            return (Criteria) this;
        }

        public Criteria andMaTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ma_time >=", value, "maTime");
            return (Criteria) this;
        }

        public Criteria andMaTimeLessThan(Date value) {
            addCriterionForJDBCDate("ma_time <", value, "maTime");
            return (Criteria) this;
        }

        public Criteria andMaTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ma_time <=", value, "maTime");
            return (Criteria) this;
        }

        public Criteria andMaTimeIn(List<Date> values) {
            addCriterionForJDBCDate("ma_time in", values, "maTime");
            return (Criteria) this;
        }

        public Criteria andMaTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("ma_time not in", values, "maTime");
            return (Criteria) this;
        }

        public Criteria andMaTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ma_time between", value1, value2, "maTime");
            return (Criteria) this;
        }

        public Criteria andMaTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ma_time not between", value1, value2, "maTime");
            return (Criteria) this;
        }

        public Criteria andMaReasonIsNull() {
            addCriterion("ma_reason is null");
            return (Criteria) this;
        }

        public Criteria andMaReasonIsNotNull() {
            addCriterion("ma_reason is not null");
            return (Criteria) this;
        }

        public Criteria andMaReasonEqualTo(String value) {
            addCriterion("ma_reason =", value, "maReason");
            return (Criteria) this;
        }

        public Criteria andMaReasonNotEqualTo(String value) {
            addCriterion("ma_reason <>", value, "maReason");
            return (Criteria) this;
        }

        public Criteria andMaReasonGreaterThan(String value) {
            addCriterion("ma_reason >", value, "maReason");
            return (Criteria) this;
        }

        public Criteria andMaReasonGreaterThanOrEqualTo(String value) {
            addCriterion("ma_reason >=", value, "maReason");
            return (Criteria) this;
        }

        public Criteria andMaReasonLessThan(String value) {
            addCriterion("ma_reason <", value, "maReason");
            return (Criteria) this;
        }

        public Criteria andMaReasonLessThanOrEqualTo(String value) {
            addCriterion("ma_reason <=", value, "maReason");
            return (Criteria) this;
        }

        public Criteria andMaReasonLike(String value) {
            addCriterion("ma_reason like", value, "maReason");
            return (Criteria) this;
        }

        public Criteria andMaReasonNotLike(String value) {
            addCriterion("ma_reason not like", value, "maReason");
            return (Criteria) this;
        }

        public Criteria andMaReasonIn(List<String> values) {
            addCriterion("ma_reason in", values, "maReason");
            return (Criteria) this;
        }

        public Criteria andMaReasonNotIn(List<String> values) {
            addCriterion("ma_reason not in", values, "maReason");
            return (Criteria) this;
        }

        public Criteria andMaReasonBetween(String value1, String value2) {
            addCriterion("ma_reason between", value1, value2, "maReason");
            return (Criteria) this;
        }

        public Criteria andMaReasonNotBetween(String value1, String value2) {
            addCriterion("ma_reason not between", value1, value2, "maReason");
            return (Criteria) this;
        }

        public Criteria andMaGradeIsNull() {
            addCriterion("ma_grade is null");
            return (Criteria) this;
        }

        public Criteria andMaGradeIsNotNull() {
            addCriterion("ma_grade is not null");
            return (Criteria) this;
        }

        public Criteria andMaGradeEqualTo(Integer value) {
            addCriterion("ma_grade =", value, "maGrade");
            return (Criteria) this;
        }

        public Criteria andMaGradeNotEqualTo(Integer value) {
            addCriterion("ma_grade <>", value, "maGrade");
            return (Criteria) this;
        }

        public Criteria andMaGradeGreaterThan(Integer value) {
            addCriterion("ma_grade >", value, "maGrade");
            return (Criteria) this;
        }

        public Criteria andMaGradeGreaterThanOrEqualTo(Integer value) {
            addCriterion("ma_grade >=", value, "maGrade");
            return (Criteria) this;
        }

        public Criteria andMaGradeLessThan(Integer value) {
            addCriterion("ma_grade <", value, "maGrade");
            return (Criteria) this;
        }

        public Criteria andMaGradeLessThanOrEqualTo(Integer value) {
            addCriterion("ma_grade <=", value, "maGrade");
            return (Criteria) this;
        }

        public Criteria andMaGradeIn(List<Integer> values) {
            addCriterion("ma_grade in", values, "maGrade");
            return (Criteria) this;
        }

        public Criteria andMaGradeNotIn(List<Integer> values) {
            addCriterion("ma_grade not in", values, "maGrade");
            return (Criteria) this;
        }

        public Criteria andMaGradeBetween(Integer value1, Integer value2) {
            addCriterion("ma_grade between", value1, value2, "maGrade");
            return (Criteria) this;
        }

        public Criteria andMaGradeNotBetween(Integer value1, Integer value2) {
            addCriterion("ma_grade not between", value1, value2, "maGrade");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table chec_manage
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table chec_manage
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}